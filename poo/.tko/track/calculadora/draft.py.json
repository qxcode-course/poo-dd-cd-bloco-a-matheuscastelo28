{
    "patches": [
        {
            "label": "2025-10-01_19-45-09",
            "content": "@@ -2,1758 +2,4 @@\n lass\n- Calculator:%0A    def __init__(self, batteryMax: int):%0A        self.batteryMax = batteryMax%0A        self.baterry = 0%0A        self.display = 0.0%0A        %0A    def __str__(self):%0A        return f%22display %7Bself.display:.2f%7D, baterry = %7Bself.baterry%7D%22%0A    %0A    def charge(self, increment: int):%0A        self.baterry += increment%0A        if self.baterry %3E self.batteryMax:%0A              self.baterry = self.batteryMax%0A              %0A    def useBattery(self) -%3E bool:%0A        if self.baterry == 0:%0A            print(%22fail: bateria insuficieeente%22)%0A            return False%0A        self.baterry -= 1%0A        return True %0A    %0A    def sum(self, a: float, b: float):%0A        if not self.useBattery:%0A            return%0A        self.display = a + b%0A        %0A    def div(self, num: float, den: float):%0A        if not self.useBattery():%0A            return%0A        if den == 0:%0A            print(%22fail: divisao por zero%22)%0A            return%0A        self.display = num / den%0A        %0A    def main():%0A        calc = None%0A        while True:%0A            try:%0A                line = input().strip().split()%0A            except EOFError:%0A                break%0A            if not line:%0A                continue%0A            cmd = line%5B0%5D%0A            if cmd == %22$end%22:%0A                 break%0A            elif cmd == %22$init%22:%0A                calc = Calculator(int(line%5B1%5D))%0A            elif cmd == %22$show%22:%0A                print(calc)%0A            elif cmd ==%22$charge%22:%0A                calc.charge(int(line%5B1%5D))%0A            elif cmd == %22$sum%22:%0A                a, b = float(line%5B1%5D), float(line%5B2%5D)%0A                calc.sum(a, b)%0A            elif cmd == %22$div%22:%0A                num, den = float(line%5B1%5D), float(line%5B2%5D)%0A                calc.div(num, den)%0A                %0A    main()\n",
            "lines": "1"
        },
        {
            "label": "2025-10-01_20-12-15",
            "content": "@@ -101,26 +101,26 @@\n     self.bat\n-t\n e\n+r\n ry = 0%0A     \n@@ -197,18 +197,16 @@\n %22display\n- =\n  %7Bself.d\n@@ -221,18 +221,18 @@\n 2f%7D, bat\n-t\n e\n+r\n ry = %7Bse\n@@ -237,19 +237,19 @@\n self.bat\n-t\n er\n+r\n y%7D%22%0A    \n@@ -303,18 +303,18 @@\n self.bat\n-t\n e\n+r\n ry += in\n@@ -340,18 +340,18 @@\n self.bat\n-t\n e\n+r\n ry %3E sel\n@@ -372,32 +372,34 @@\n             \n+  \n self.bat\n tery = self.\n@@ -382,26 +382,26 @@\n     self.bat\n-t\n e\n+r\n ry = self.ba\n@@ -477,19 +477,19 @@\n self.bat\n-t\n er\n+r\n y == 0:%0A\n@@ -530,16 +530,18 @@\n nsuficie\n+ee\n nte%22)%0A  \n@@ -579,18 +579,18 @@\n self.bat\n-t\n e\n+r\n ry -= 1%0A\n@@ -676,34 +676,32 @@\n  self.useBattery\n-()\n :%0A            re\n@@ -956,18 +956,29 @@\n m / den%0A\n-%0A%0A\n+        %0A    \n def main\n@@ -977,24 +977,28 @@\n def main():%0A\n+    \n     calc = N\n@@ -1001,16 +1001,20 @@\n  = None%0A\n+    \n     whil\n@@ -1033,13 +1033,21 @@\n     \n+    \n try:%0A\n+    \n     \n@@ -1085,16 +1085,20 @@\n split()%0A\n+    \n         \n@@ -1118,38 +1118,46 @@\n or:%0A            \n+    \n break%0A\n+    \n         if not l\n@@ -1173,16 +1173,20 @@\n         \n+    \n continue\n@@ -1186,16 +1186,20 @@\n ontinue%0A\n+    \n         \n@@ -1220,16 +1220,20 @@\n         \n+    \n if cmd =\n@@ -1246,38 +1246,47 @@\n d%22:%0A            \n+    \n+ \n break%0A\n+    \n         elif cmd\n@@ -1306,24 +1306,28 @@\n             \n+   \n+ \n calc = Calcu\n@@ -1346,32 +1346,36 @@\n ne%5B1%5D))%0A        \n+    \n elif cmd == %22$sh\n@@ -1387,24 +1387,28 @@\n             \n+   \n+ \n print(calc)%0A\n@@ -1407,32 +1407,36 @@\n t(calc)%0A        \n+   \n+ \n elif cmd == %22$ch\n@@ -1430,17 +1430,16 @@\n f cmd ==\n- \n %22$charge\n@@ -1449,24 +1449,28 @@\n             \n+  \n+  \n calc.charge(\n@@ -1483,32 +1483,36 @@\n ne%5B1%5D))%0A        \n+    \n elif cmd == %22$su\n@@ -1527,16 +1527,20 @@\n         \n+  \n+  \n a, b = f\n@@ -1577,24 +1577,28 @@\n             \n+    \n calc.sum(a, \n@@ -1600,32 +1600,36 @@\n m(a, b)%0A        \n+  \n+  \n elif cmd == %22$di\n@@ -1632,16 +1632,20 @@\n %22$div%22:%0A\n+    \n         \n@@ -1698,24 +1698,28 @@\n             \n+    \n calc.div(num\n@@ -1729,13 +1729,31 @@\n en)%0A\n-%0A\n+                %0A    \n main()\n-%0A%0A\n",
            "lines": "60"
        },
        {
            "label": "2025-10-01_20-29-43",
            "content": "@@ -1015,21 +1015,16 @@\n    try:%0A\n-    %0A\n         \n",
            "lines": "62"
        },
        {
            "label": "2025-10-01_20-30-15",
            "content": "@@ -1015,16 +1015,21 @@\n    try:%0A\n+    %0A\n         \n@@ -1635,8 +1635,9 @@\n %0Amain()%0A\n+%0A\n",
            "lines": "63"
        },
        {
            "label": "2025-10-01_20-31-35",
            "content": "@@ -6,20 +6,19 @@\n  Calcula\n-d\n+t\n or\n-a\n :%0A    de\n@@ -69,21 +69,31 @@\n elf.\n-display = 0.0\n+batteryMax = batteryMax\n %0A   \n@@ -131,32 +131,30 @@\n elf.\n-batteryMax = batteryMax%0A\n+display = 0.0%0A        \n %0A   \n@@ -246,16 +246,20 @@\n ttery%7D%22%0A\n+    \n %0A    def\n@@ -409,16 +409,30 @@\n teryMax%0A\n+              \n %0A    def\n@@ -482,17 +482,18 @@\n battery \n-%3E\n+==\n  0:%0A    \n@@ -504,25 +504,43 @@\n     \n-self.\n+print(%22fail: \n bat\n-t\n er\n-y -= 1\n+ia insuficiente%22)\n %0A   \n@@ -555,19 +555,20 @@\n  return \n-Tru\n+Fals\n e%0A      \n@@ -573,43 +573,25 @@\n     \n-print(%22fail: \n+self.\n bat\n+t\n er\n-ia insuficiente%22)\n+y -= 1\n %0A   \n@@ -602,22 +602,26 @@\n  return \n-False%0A\n+True %0A    \n %0A    def\n@@ -659,24 +659,28 @@\n %0A        if \n+not \n self.useBatt\n@@ -682,32 +682,47 @@\n eBattery():%0A    \n+        return%0A\n         self.dis\n@@ -734,16 +734,24 @@\n = a + b%0A\n+        \n %0A    def\n@@ -908,34 +908,35 @@\n o%22)%0A        \n-else:%0A    \n+    return%0A\n         self\n@@ -1014,77 +1014,162 @@\n     \n-line = input()%0A        args = line.split()%0A        print(%22$%22 +\n+try:%0A            line = input().strip().split()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A        cmd =\n  line\n-)%0A\n+%5B0%5D\n %0A   \n@@ -1176,28 +1176,25 @@\n      if \n-args%5B0%5D\n+cmd\n  == %22\n+$\n end%22:%0A  \n@@ -1222,28 +1222,25 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22\n+$\n init%22:%0A \n@@ -1268,21 +1268,20 @@\n cula\n-d\n+t\n or\n-a\n (int(\n-args\n+line\n %5B1%5D)\n@@ -1295,28 +1295,25 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22\n+$\n show%22:%0A \n@@ -1348,28 +1348,25 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22\n+$\n charge%22:\n@@ -1394,20 +1394,20 @@\n rge(int(\n-args\n+line\n %5B1%5D))%0A  \n@@ -1417,28 +1417,25 @@\n    elif \n-args%5B0%5D\n+cmd\n  == %22\n+$\n sum%22:%0A  \n@@ -1448,27 +1448,25 @@\n     \n-calc.sum(\n+a, b = \n float(\n-args\n+line\n %5B1%5D)\n@@ -1469,32 +1469,58 @@\n %5B1%5D), float(\n-args%5B2%5D)\n+line%5B2%5D)%0A            calc.sum(a, b\n )%0A        el\n@@ -1526,20 +1526,17 @@\n lif \n-args%5B0%5D\n+cmd\n  == %22\n+$\n div%22\n@@ -1553,27 +1553,29 @@\n     \n-calc.div(\n+num, den = \n float(\n-args\n+line\n %5B1%5D)\n@@ -1586,17 +1586,16 @@\n oat(\n-args\n+line\n %5B2%5D)\n-)\n %0A   \n@@ -1603,62 +1603,34 @@\n     \n-else:%0A            print(%22fail: comando invalido%22)%0A\n+    calc.div(num, den)\n %0A%0Amain()\n@@ -1625,12 +1625,13 @@\n den)%0A%0Amain()\n+%0A\n",
            "lines": "61"
        },
        {
            "label": "2025-10-01_22-25-50",
            "content": "class Calculadora:\n    def __init__(self, batteryMax: int):\n        self.display = 0.0\n        self.battery = 0\n        self.batteryMax = batteryMax\n\n    def __str__(self):\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n\n    def charge(self, increment: int):\n        self.battery += increment\n        if self.battery > self.batteryMax:\n            self.battery = self.batteryMax\n\n    def useBattery(self) -> bool:\n        if self.battery > 0:\n            self.battery -= 1\n            return True\n        print(\"fail: bateria insuficiente\")\n        return False\n\n    def sum(self, a: float, b: float):\n        if self.useBattery():\n            self.display = a + b\n\n    def div(self, num: float, den: float):\n        if not self.useBattery():\n            return\n        if den == 0:\n            print(\"fail: divisao por zero\")\n        else:\n            self.display = num / den\n\n\ndef main():\n    calc = None\n    while True:\n        line = input()\n        args = line.split()\n        print(\"$\" + line)\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            calc = Calculadora(int(args[1]))\n        elif args[0] == \"show\":\n            print(calc)\n        elif args[0] == \"charge\":\n            calc.charge(int(args[1]))\n        elif args[0] == \"sum\":\n            calc.sum(float(args[1]), float(args[2]))\n        elif args[0] == \"div\":\n            calc.div(float(args[1]), float(args[2]))\n        else:\n            print(\"fail: comando invalido\")\n\n\nmain()",
            "lines": "58"
        }
    ]
}