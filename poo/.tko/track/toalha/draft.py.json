{
    "patches": [
        {
            "label": "2025-09-16_19-56-35",
            "content": "@@ -1,215 +0,0 @@\n-class Towel: %0A    def __init__(self):%0A        self.color = %22red%22%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0A towel = Towel()%0Aprint(towel.color)%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)       \n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_20-11-52",
            "content": "@@ -108,16 +108,17 @@\n ss = 0%0A%0A\n+ \n towel = \n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-12-56",
            "content": "@@ -1,40 +1,62 @@\n-%0Aclass Towel: %0A    def __init__(\n+@@ -1,9 +1,8 @@%0A-%250A%0A class To%0A@@ -32,47 +32,10 @@%0A \n self\n+%0A-\n , co\n@@ -95,224 +95,118 @@\n or %0A\n-        self.color = %22red%22 # atributos%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0A    def __str__(self):%0A        return f%22color:%7Bself.color%7D, tam:%7Bself.size%7D, hum%7Bself.wetness%7D%22%0A%0A%0A%0A%0Atowel = Towel(%22 green%22, %22G%22\n++):%0A %250A   %0A@@ -61,20 +61,8 @@%0A red%2522%0A- # atributos%0A %250A   %0A@@ -126,73 +126,9 @@%0A wel(%0A-%2522 green%2522, %2522G%2522\n ) #o\n@@ -211,17 +211,19 @@\n #objetos\n-%0A\n+%250A\n toalha =\n@@ -233,114 +233,52 @@\n wel(\n-%22red%22, %22p%22)%0Aoutra = toalha%0Aprint(towel.color)%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)       \n+%2522red%2522, %2522p%2522)%250Aoutra = toalha%0A+)%0A %250Apri%0A\n",
            "lines": "17"
        },
        {
            "label": "2025-09-16_20-23-07",
            "content": "@@ -162,85 +162,8 @@\n  0%0A%0A\n-%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness+= amount    %0A%0A\n     \n@@ -183,27 +183,9 @@\n elf)\n--%3E str: # to string\n+:\n %0A   \n",
            "lines": "20"
        },
        {
            "label": "2025-09-22_18-42-07",
            "content": "@@ -1,244 +1,96 @@\n-%0Aclass Towel: %0A    def __init__(self, color: str, size: str): # construtor %0A        self.color = %22red%22 # atributos%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness+= amount  %0A  \n+@@ -159,16 +159,17 @@%0A s = 0%250A%250A%250A%0A+%250A%0A     def %0A@@ -235,352 +235,10 @@%0A nt  %0A-%250A%0A   %0A-\n     \n@@ -107,17 +107,19 @@\n wetness \n-%3E\n+%253E\n = self.g\n@@ -133,17 +133,19 @@\n tness():\n-%0A\n+%250A\n         \n@@ -154,17 +154,19 @@\n   print(\n-%22\n+%2522\n Toalha e\n@@ -174,19 +174,23 @@\n charcada\n-%22)%0A\n+%2522)%250A\n         \n@@ -228,19 +228,25 @@\n etness()\n-%0A%0A%0A\n+%250A%250A%250A\n     def \n@@ -270,15 +270,19 @@\n f) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -305,13 +305,19 @@\n  == \n-%22P%22:%0A\n+%2522P%2522:%250A\n     \n@@ -333,17 +333,19 @@\n eturn 10\n-%0A\n+%250A\n         \n@@ -364,13 +364,19 @@\n  == \n-%22M%22:%0A\n+%2522M%2522:%250A\n     \n@@ -392,17 +392,19 @@\n eturn 20\n-%0A\n+%250A\n         \n@@ -423,13 +423,19 @@\n  == \n-%22G%22:%0A\n+%2522G%2522:%250A\n     \n@@ -451,17 +451,19 @@\n eturn 30\n-%0A\n+%250A\n         \n@@ -475,298 +475,121 @@\n n 0%0A\n-%0A    def __str__(self)-%3E str: # to string%0A        return f%22color:%7Bself.color%7D, tam:%7Bself.size%7D, hum%7Bself.wetness%7D%22%0A%0A%0A%0A# referencia %0Atowel = Towel(%22green%22, %22G%22) #objetos%0Atoalha = Towel(%22red%22, %22p%22)%0Aoutra = toalha%0Aprint(towel.color)%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)       \n+ %250A%250A  %0A@@ -356,21 +356,8 @@%0A %250A%250A%250A%250A%0A-# referencia %0A %250Atow%0A@@ -368,16 +368,17 @@%0A  Towel(%2522%0A+ %0A green%2522, %0A\n",
            "lines": "18"
        },
        {
            "label": "2025-09-22_19-00-51",
            "content": "@@ -726,12 +726,13 @@\n el(%22\n-blue\n+green\n %22, %22\n",
            "lines": "37"
        },
        {
            "label": "2025-09-22_19-01-46",
            "content": "@@ -91,21 +91,16 @@\n olor\n-: str = color\n+ = %22red%22\n  # a\n@@ -129,20 +129,14 @@\n size\n-: str = size\n+ = %22p%22\n %0A   \n@@ -152,21 +152,16 @@\n .wetness\n-: int\n  = 0%0A%0A%0A \n@@ -199,16 +199,16 @@\n %3E None:%0A\n+\n         \n@@ -219,17 +219,16 @@\n .wetness\n- \n += amoun\n",
            "lines": "37"
        },
        {
            "label": "2025-09-22_19-19-32",
            "content": "@@ -1,8 +1,9 @@\n+%0A\n class To\n@@ -11,16 +11,8 @@\n el: \n-   #this\n %0A   \n@@ -68,12 +68,12 @@\n stru\n-c\n tor\n+ \n %0A   \n@@ -170,24 +170,25 @@\n s: int = 0%0A%0A\n+%0A\n     def dry(\n@@ -245,16 +245,18 @@\n = amount\n+  \n %0A       \n@@ -316,17 +316,17 @@\n  print(%22\n-t\n+T\n oalha en\n@@ -389,132 +389,8 @@\n ()%0A%0A\n-    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A\n %0A   \n@@ -614,17 +614,16 @@\n __(self)\n- \n -%3E str: \n@@ -630,9 +630,10 @@\n # to\n-S\n+ s\n trin\n@@ -655,9 +655,11 @@\n n f%22\n-C\n+col\n or:%7B\n@@ -671,17 +671,17 @@\n color%7D, \n-T\n+t\n am:%7Bself\n@@ -692,16 +692,11 @@\n e%7D, \n-Umidade:\n+hum\n %7Bsel\n@@ -712,43 +712,39 @@\n %7D%22%0A%0A\n-def main(): #2%0A   toalha\n+%0A%0A# referencia %0Atowel\n  =\n- \n  Towel(%22\n %22, %22\n@@ -743,596 +743,150 @@\n el(%22\n+blue\n %22, %22\n+G\n %22) #\n- 3 \n objeto\n- manipulado%0A   while True: #4 loop infinito%0A        line: s\n+s%0Atoalha = Towel(%22red%22, %22p%22)%0Aou\n tr\n+a\n  = \n-input() # 5 entrada da linha%0A        args: list%5Bstr%5D = line.split(%22  %22) # 6 lista de palavra%0A        if args%5B0%5D == %22end%22: # fim da execu%C3%A7%C3%A3o %0A            break %0A        elif args%5B0%5D == %22new%22: # color %0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha =  T\n+toalha%0Aprint(towel.color)%0Aprint(t\n owel\n-(\n+.\n color\n-, size)%0A        elif args%5B0%5D == %22show%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount) %0A        else: %0A           print(%22comando invalido%22)%0A%0A%0A%0A\n+)%0Aprint(towel.size)%0Aprint(towel.wetness)       \n",
            "lines": "37"
        },
        {
            "label": "2025-09-22_20-12-33",
            "content": "class Towel:    #this\n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: # toString\n        return f\"Cor:{self.color}, Tam:{self.size}, Umidade:{self.wetness}\"\n\ndef main(): #2\n   toalha =  Towel(\"\", \"\") # 3 objeto manipulado\n   while True: #4 loop infinito\n        line: str = input() # 5 entrada da linha\n        args: list[str] = line.split(\"  \") # 6 lista de palavra\n        if args[0] == \"end\": # fim da execu\u00e7\u00e3o \n            break \n        elif args[0] == \"new\": # color \n            color = args[1]\n            size = args[2]\n            toalha =  Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            toalha.dry(amount) \n        else: \n           print(\"comando invalido\")\n\n\n\n",
            "lines": "51"
        }
    ]
}